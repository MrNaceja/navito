var a=class i extends HTMLElement{static{this.VARIANT_UNDERLINE="underline"}static{this.VARIANT_FILL="fill"}static{this.VARIANT_OUTLINE="outline"}static{this.VARIANT_GHOST="ghost"}constructor(){super(),this.shadow_root=this.attachShadow({mode:"closed"})}get navito(){if(!window.navito)throw new Error("The Navito Instance is required to use NavitoLink and is not defined.");return window.navito}get variant(){return this.normalizeVariant(this.getAttribute("variant"))}normalizeVariant(t){return!t||t&&![i.VARIANT_FILL,i.VARIANT_GHOST,i.VARIANT_OUTLINE,i.VARIANT_UNDERLINE].includes(t)?void 0:t}set variant(t){if(typeof t>"u"){this.removeAttribute("variant");return}this.setAttribute("variant",t)}static get observedAttributes(){return["variant"]}attributeChangedCallback(t,r,e){t=="variant"&&this.beautify()}connectedCallback(){this.render(),this.beautify(),this.addEventListener("click",this.handleClick.bind(this))}noVariant(){return this.variant=void 0,this}variantFill(){return this.variant=i.VARIANT_FILL,this}variantGhost(){return this.variant=i.VARIANT_GHOST,this}variantOutline(){return this.variant=i.VARIANT_OUTLINE,this}variantUnderline(){return this.variant=i.VARIANT_UNDERLINE,this}beautify(){if(typeof this.variant>"u")return;let t=document.createElement("style"),r={[i.VARIANT_GHOST]:`
                :host {
                    color: black;
                    background: transparent;
                }
                :host(:hover) {
                    background: rgba(0,0,0,.15);
                }
            `,[i.VARIANT_UNDERLINE]:`
                :host {
                    color: black;
                }
                :host(:hover) {
                    color: var(--highlight-color);
                    text-decoration: underline;
                }
            `,[i.VARIANT_OUTLINE]:`
                :host {
                    color: var(--highlight-color);
                    background: transparent;
                    border: 1px solid var(--highlight-color);
                }
                :host(:hover) {
                    background: var(--highlight-color);
                    color: white;
                }
            `,[i.VARIANT_FILL]:`
                :host {
                    color: white;
                    background: var(--highlight-color);
                }
                :host(:hover) {
                    background: color-mix(in srgb, var(--highlight-color) 90%, white 10%);
                }
            `}[this.variant];return t.textContent=`
            :host {
                --highlight-color: crimson;
                padding: 0.25rem 0.5rem;
                border-radius: 0.25rem;
                cursor: pointer;
            }
            ${r}
        `,this.shadow_root.querySelector("style")?.remove(),this.shadow_root.append(t),this}render(){this.shadow_root.textContent=this.textContent,this.textContent=""}handleClick(t){t.preventDefault();let r=this.getAttribute("to");if(!r){console.error("The path to navigate is required.");return}this.navito.to(r)}};customElements.define("navito-link",a);var h=class{constructor(t="/"){this.routes=new Map;this.current_running_path="";this.global_hooks={before:[],after:[]};this.root_path="/"+t.replace(/^\/|\/$/g,"")}static Link(t,r){let e=new a;return e.setAttribute("to",t),e.append(r),e}compileRoutePath(t){let r=[];return{regex:new RegExp("^"+t.replace(/([:*])(\w+)/g,(o,n,s)=>(r.push(s),n==="*"?"(.*)":"([^/]+)")).replace(/\//g,"\\/")+"(?:\\/?)?$"),paramNames:r}}before(...t){return this.global_hooks.before.push(...t),this}after(...t){return this.global_hooks.after.push(...t),this}whenNotFound(t){return this.intercept("404",t).before(()=>{this.updateNavigationState({path:"/404"})}),this}intercept(t,r){let{regex:e,paramNames:o}=this.compileRoutePath(t);this.routes.set(t,{path:t,regex:e,paramNames:o,handler:r,hooks:{before:[],after:[]}});let n={before:(...s)=>(this.routes.get(t).hooks.before.push(...s),n),after:(...s)=>(this.routes.get(t).hooks.after.push(...s),n)};return n}on(){return window.navito=this,window.addEventListener("popstate",this.react.bind(this)),this.react(),this}react(){this.navigation_controller&&this.navigation_controller.abort(),this.navigation_controller=new AbortController;let t=this.useCurrentPathLocation();if(t===this.current_running_path)return;this.current_running_path=t;let r=this.useRouteFromPath(t);r&&this.run(r)}async run(t){let r=this.useContext(t);try{for(let e of this.global_hooks.before){if(this.navigation_controller.signal.aborted)return;let o=e(r);if(o instanceof Promise&&(o=await o),o===!1)return}for(let e of t.hooks.before){if(this.navigation_controller.signal.aborted)return;let o=e(r);if(o instanceof Promise&&(o=await o),o===!1)return}if(this.navigation_controller.signal.aborted)return;await t.handler(r);for(let e of t.hooks.after){if(this.navigation_controller.signal.aborted)return;await e(r)}for(let e of this.global_hooks.after){if(this.navigation_controller.signal.aborted)return;await e(r)}}catch(e){console.error("Route navigation error:",e)}}updateNavigationState({path:t,data:r}){return history.pushState(r,"",t),this}to(t){return t.startsWith(this.root_path)||(t=this.root_path.replace(/\/$/,"")+t),this.updateNavigationState({path:t}),this.react(),this}useRouteFromPath(t){for(let r of this.routes.values())if(r.regex.test(t))return r;return this.routes.get("404")}useCurrentPathLocation(){let t=window.location.pathname;return this.root_path!=="/"&&t.startsWith(this.root_path)&&(t=t.slice(this.root_path.length)),t.replace(/\/$/,"")||"/"}useContext(t){let r=this.current_running_path.match(t.regex),e={};return t.paramNames.forEach((o,n)=>{e[o]=r[n+1]}),{current_location:this.current_running_path,route_params:e,query_params:new URLSearchParams(window.location.search),query_string:window.location.search,state:history.state}}};export{h as default};
